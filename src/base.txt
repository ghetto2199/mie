;declare { i64, i1 } @llvm.uadd.iwth.overflow.i64(i64, i64)

; void mie_fp_add@BitN
define void @mie_fp_add@BitN(i@BitN* %pz, i@BitN* %px, i@BitN* %py, i@BitN* %pp) {
entry:
	%x = load i@BitN* %px
	%y = load i@BitN* %py
	%p = load i@BitN* %pp
	%x1 = zext i@BitN %x to i@BitNP
	%y1 = zext i@BitN %y to i@BitNP
	%p1 = zext i@BitN %p to i@BitNP
	%t0 = add i@BitNP %x1, %y1
	%t1 = sub i@BitNP %t0, %p1 ; x + y - p
	%t2 = lshr i@BitNP %t1, @BitN
	%t3 = trunc i@BitNP %t2 to i@Unit
	%t4 = trunc i@BitNP %t1 to i@BitN ; x + y - p
	%t5 = trunc i@BitNP %t0 to i@BitN ; x + y
	%zero = icmp eq i@Unit %t3, 0
	br i1 %zero, label %nocarry, label %carry
carry:
	br label %exit
nocarry:
	br label %exit
exit:
	%t6 = phi i@BitN [%t5, %carry], [%t4, %nocarry]
	store i@BitN %t6, i@BitN* %pz
	ret void
}


